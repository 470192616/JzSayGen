#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18063
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace JzSayDemo.ClsDll
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="test")]
	public partial class DBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertCategoryLib(CategoryLib instance);
    partial void UpdateCategoryLib(CategoryLib instance);
    partial void DeleteCategoryLib(CategoryLib instance);
    partial void InsertIntroLib(IntroLib instance);
    partial void UpdateIntroLib(IntroLib instance);
    partial void DeleteIntroLib(IntroLib instance);
    partial void InsertKeyWordsLib(KeyWordsLib instance);
    partial void UpdateKeyWordsLib(KeyWordsLib instance);
    partial void DeleteKeyWordsLib(KeyWordsLib instance);
    partial void InsertWebSafe(WebSafe instance);
    partial void UpdateWebSafe(WebSafe instance);
    partial void DeleteWebSafe(WebSafe instance);
    partial void InsertlogsLib(logsLib instance);
    partial void UpdatelogsLib(logsLib instance);
    partial void DeletelogsLib(logsLib instance);
    #endregion
		
		public DBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["testConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CategoryLib> CategoryLib
		{
			get
			{
				return this.GetTable<CategoryLib>();
			}
		}
		
		public System.Data.Linq.Table<IntroLib> IntroLib
		{
			get
			{
				return this.GetTable<IntroLib>();
			}
		}
		
		public System.Data.Linq.Table<KeyWordsLib> KeyWordsLib
		{
			get
			{
				return this.GetTable<KeyWordsLib>();
			}
		}
		
		public System.Data.Linq.Table<WebSafe> WebSafe
		{
			get
			{
				return this.GetTable<WebSafe>();
			}
		}
		
		public System.Data.Linq.Table<logsLib> logsLib
		{
			get
			{
				return this.GetTable<logsLib>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CategoryLib")]
	public partial class CategoryLib : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UrlKey;
		
		private string _Title;
		
		private string _Icon;
		
		private string _AttJson;
		
		private long _ViewOrder;
		
		private int _Stat;
		
		private long _CreateTS;
		
		private long _UpdateTS;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUrlKeyChanging(string value);
    partial void OnUrlKeyChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnIconChanging(string value);
    partial void OnIconChanged();
    partial void OnAttJsonChanging(string value);
    partial void OnAttJsonChanged();
    partial void OnViewOrderChanging(long value);
    partial void OnViewOrderChanged();
    partial void OnStatChanging(int value);
    partial void OnStatChanged();
    partial void OnCreateTSChanging(long value);
    partial void OnCreateTSChanged();
    partial void OnUpdateTSChanging(long value);
    partial void OnUpdateTSChanged();
    #endregion
		
		public CategoryLib()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlKey", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UrlKey
		{
			get
			{
				return this._UrlKey;
			}
			set
			{
				if ((this._UrlKey != value))
				{
					this.OnUrlKeyChanging(value);
					this.SendPropertyChanging();
					this._UrlKey = value;
					this.SendPropertyChanged("UrlKey");
					this.OnUrlKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Icon", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Icon
		{
			get
			{
				return this._Icon;
			}
			set
			{
				if ((this._Icon != value))
				{
					this.OnIconChanging(value);
					this.SendPropertyChanging();
					this._Icon = value;
					this.SendPropertyChanged("Icon");
					this.OnIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttJson", DbType="NVarChar(350) NOT NULL", CanBeNull=false)]
		public string AttJson
		{
			get
			{
				return this._AttJson;
			}
			set
			{
				if ((this._AttJson != value))
				{
					this.OnAttJsonChanging(value);
					this.SendPropertyChanging();
					this._AttJson = value;
					this.SendPropertyChanged("AttJson");
					this.OnAttJsonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewOrder", DbType="BigInt NOT NULL")]
		public long ViewOrder
		{
			get
			{
				return this._ViewOrder;
			}
			set
			{
				if ((this._ViewOrder != value))
				{
					this.OnViewOrderChanging(value);
					this.SendPropertyChanging();
					this._ViewOrder = value;
					this.SendPropertyChanged("ViewOrder");
					this.OnViewOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stat", DbType="Int NOT NULL")]
		public int Stat
		{
			get
			{
				return this._Stat;
			}
			set
			{
				if ((this._Stat != value))
				{
					this.OnStatChanging(value);
					this.SendPropertyChanging();
					this._Stat = value;
					this.SendPropertyChanged("Stat");
					this.OnStatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTS", DbType="BigInt NOT NULL")]
		public long CreateTS
		{
			get
			{
				return this._CreateTS;
			}
			set
			{
				if ((this._CreateTS != value))
				{
					this.OnCreateTSChanging(value);
					this.SendPropertyChanging();
					this._CreateTS = value;
					this.SendPropertyChanged("CreateTS");
					this.OnCreateTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTS", DbType="BigInt NOT NULL")]
		public long UpdateTS
		{
			get
			{
				return this._UpdateTS;
			}
			set
			{
				if ((this._UpdateTS != value))
				{
					this.OnUpdateTSChanging(value);
					this.SendPropertyChanging();
					this._UpdateTS = value;
					this.SendPropertyChanged("UpdateTS");
					this.OnUpdateTSChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IntroLib")]
	public partial class IntroLib : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UrlKey;
		
		private string _Title;
		
		private string _Intro;
		
		private int _Stat;
		
		private long _CreateTS;
		
		private long _UpdateTS;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUrlKeyChanging(string value);
    partial void OnUrlKeyChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnIntroChanging(string value);
    partial void OnIntroChanged();
    partial void OnStatChanging(int value);
    partial void OnStatChanged();
    partial void OnCreateTSChanging(long value);
    partial void OnCreateTSChanged();
    partial void OnUpdateTSChanging(long value);
    partial void OnUpdateTSChanged();
    #endregion
		
		public IntroLib()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlKey", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UrlKey
		{
			get
			{
				return this._UrlKey;
			}
			set
			{
				if ((this._UrlKey != value))
				{
					this.OnUrlKeyChanging(value);
					this.SendPropertyChanging();
					this._UrlKey = value;
					this.SendPropertyChanged("UrlKey");
					this.OnUrlKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Intro", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Intro
		{
			get
			{
				return this._Intro;
			}
			set
			{
				if ((this._Intro != value))
				{
					this.OnIntroChanging(value);
					this.SendPropertyChanging();
					this._Intro = value;
					this.SendPropertyChanged("Intro");
					this.OnIntroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stat", DbType="Int NOT NULL")]
		public int Stat
		{
			get
			{
				return this._Stat;
			}
			set
			{
				if ((this._Stat != value))
				{
					this.OnStatChanging(value);
					this.SendPropertyChanging();
					this._Stat = value;
					this.SendPropertyChanged("Stat");
					this.OnStatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTS", DbType="BigInt NOT NULL")]
		public long CreateTS
		{
			get
			{
				return this._CreateTS;
			}
			set
			{
				if ((this._CreateTS != value))
				{
					this.OnCreateTSChanging(value);
					this.SendPropertyChanging();
					this._CreateTS = value;
					this.SendPropertyChanged("CreateTS");
					this.OnCreateTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTS", DbType="BigInt NOT NULL")]
		public long UpdateTS
		{
			get
			{
				return this._UpdateTS;
			}
			set
			{
				if ((this._UpdateTS != value))
				{
					this.OnUpdateTSChanging(value);
					this.SendPropertyChanging();
					this._UpdateTS = value;
					this.SendPropertyChanged("UpdateTS");
					this.OnUpdateTSChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KeyWordsLib")]
	public partial class KeyWordsLib : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UrlKey;
		
		private string _KeyWord;
		
		private int _KeyLength;
		
		private int _KeyWeight;
		
		private int _Stat;
		
		private long _CreateTS;
		
		private long _UpdateTS;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUrlKeyChanging(string value);
    partial void OnUrlKeyChanged();
    partial void OnKeyWordChanging(string value);
    partial void OnKeyWordChanged();
    partial void OnKeyLengthChanging(int value);
    partial void OnKeyLengthChanged();
    partial void OnKeyWeightChanging(int value);
    partial void OnKeyWeightChanged();
    partial void OnStatChanging(int value);
    partial void OnStatChanged();
    partial void OnCreateTSChanging(long value);
    partial void OnCreateTSChanged();
    partial void OnUpdateTSChanging(long value);
    partial void OnUpdateTSChanged();
    #endregion
		
		public KeyWordsLib()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlKey", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UrlKey
		{
			get
			{
				return this._UrlKey;
			}
			set
			{
				if ((this._UrlKey != value))
				{
					this.OnUrlKeyChanging(value);
					this.SendPropertyChanging();
					this._UrlKey = value;
					this.SendPropertyChanged("UrlKey");
					this.OnUrlKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyWord", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string KeyWord
		{
			get
			{
				return this._KeyWord;
			}
			set
			{
				if ((this._KeyWord != value))
				{
					this.OnKeyWordChanging(value);
					this.SendPropertyChanging();
					this._KeyWord = value;
					this.SendPropertyChanged("KeyWord");
					this.OnKeyWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyLength", DbType="Int NOT NULL")]
		public int KeyLength
		{
			get
			{
				return this._KeyLength;
			}
			set
			{
				if ((this._KeyLength != value))
				{
					this.OnKeyLengthChanging(value);
					this.SendPropertyChanging();
					this._KeyLength = value;
					this.SendPropertyChanged("KeyLength");
					this.OnKeyLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyWeight", DbType="Int NOT NULL")]
		public int KeyWeight
		{
			get
			{
				return this._KeyWeight;
			}
			set
			{
				if ((this._KeyWeight != value))
				{
					this.OnKeyWeightChanging(value);
					this.SendPropertyChanging();
					this._KeyWeight = value;
					this.SendPropertyChanged("KeyWeight");
					this.OnKeyWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stat", DbType="Int NOT NULL")]
		public int Stat
		{
			get
			{
				return this._Stat;
			}
			set
			{
				if ((this._Stat != value))
				{
					this.OnStatChanging(value);
					this.SendPropertyChanging();
					this._Stat = value;
					this.SendPropertyChanged("Stat");
					this.OnStatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTS", DbType="BigInt NOT NULL")]
		public long CreateTS
		{
			get
			{
				return this._CreateTS;
			}
			set
			{
				if ((this._CreateTS != value))
				{
					this.OnCreateTSChanging(value);
					this.SendPropertyChanging();
					this._CreateTS = value;
					this.SendPropertyChanged("CreateTS");
					this.OnCreateTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTS", DbType="BigInt NOT NULL")]
		public long UpdateTS
		{
			get
			{
				return this._UpdateTS;
			}
			set
			{
				if ((this._UpdateTS != value))
				{
					this.OnUpdateTSChanging(value);
					this.SendPropertyChanging();
					this._UpdateTS = value;
					this.SendPropertyChanged("UpdateTS");
					this.OnUpdateTSChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WebSafe")]
	public partial class WebSafe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LoginName;
		
		private string _LoginSalt;
		
		private string _LoginPass;
		
		private long _CreateTS;
		
		private long _UpdateTS;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginNameChanging(string value);
    partial void OnLoginNameChanged();
    partial void OnLoginSaltChanging(string value);
    partial void OnLoginSaltChanged();
    partial void OnLoginPassChanging(string value);
    partial void OnLoginPassChanged();
    partial void OnCreateTSChanging(long value);
    partial void OnCreateTSChanged();
    partial void OnUpdateTSChanging(long value);
    partial void OnUpdateTSChanged();
    #endregion
		
		public WebSafe()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LoginName
		{
			get
			{
				return this._LoginName;
			}
			set
			{
				if ((this._LoginName != value))
				{
					this.OnLoginNameChanging(value);
					this.SendPropertyChanging();
					this._LoginName = value;
					this.SendPropertyChanged("LoginName");
					this.OnLoginNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginSalt", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string LoginSalt
		{
			get
			{
				return this._LoginSalt;
			}
			set
			{
				if ((this._LoginSalt != value))
				{
					this.OnLoginSaltChanging(value);
					this.SendPropertyChanging();
					this._LoginSalt = value;
					this.SendPropertyChanged("LoginSalt");
					this.OnLoginSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginPass", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LoginPass
		{
			get
			{
				return this._LoginPass;
			}
			set
			{
				if ((this._LoginPass != value))
				{
					this.OnLoginPassChanging(value);
					this.SendPropertyChanging();
					this._LoginPass = value;
					this.SendPropertyChanged("LoginPass");
					this.OnLoginPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTS", DbType="BigInt NOT NULL")]
		public long CreateTS
		{
			get
			{
				return this._CreateTS;
			}
			set
			{
				if ((this._CreateTS != value))
				{
					this.OnCreateTSChanging(value);
					this.SendPropertyChanging();
					this._CreateTS = value;
					this.SendPropertyChanged("CreateTS");
					this.OnCreateTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTS", DbType="BigInt NOT NULL")]
		public long UpdateTS
		{
			get
			{
				return this._UpdateTS;
			}
			set
			{
				if ((this._UpdateTS != value))
				{
					this.OnUpdateTSChanging(value);
					this.SendPropertyChanging();
					this._UpdateTS = value;
					this.SendPropertyChanged("UpdateTS");
					this.OnUpdateTSChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.logsLib")]
	public partial class logsLib : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _WaterId;
		
		private int _EventKey;
		
		private string _EventData;
		
		private System.DateTime _EventDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWaterIdChanging(long value);
    partial void OnWaterIdChanged();
    partial void OnEventKeyChanging(int value);
    partial void OnEventKeyChanged();
    partial void OnEventDataChanging(string value);
    partial void OnEventDataChanged();
    partial void OnEventDateChanging(System.DateTime value);
    partial void OnEventDateChanged();
    #endregion
		
		public logsLib()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaterId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long WaterId
		{
			get
			{
				return this._WaterId;
			}
			set
			{
				if ((this._WaterId != value))
				{
					this.OnWaterIdChanging(value);
					this.SendPropertyChanging();
					this._WaterId = value;
					this.SendPropertyChanged("WaterId");
					this.OnWaterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventKey", DbType="Int NOT NULL")]
		public int EventKey
		{
			get
			{
				return this._EventKey;
			}
			set
			{
				if ((this._EventKey != value))
				{
					this.OnEventKeyChanging(value);
					this.SendPropertyChanging();
					this._EventKey = value;
					this.SendPropertyChanged("EventKey");
					this.OnEventKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventData", DbType="NVarChar(350) NOT NULL", CanBeNull=false)]
		public string EventData
		{
			get
			{
				return this._EventData;
			}
			set
			{
				if ((this._EventData != value))
				{
					this.OnEventDataChanging(value);
					this.SendPropertyChanging();
					this._EventData = value;
					this.SendPropertyChanged("EventData");
					this.OnEventDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDate", DbType="DateTime NOT NULL")]
		public System.DateTime EventDate
		{
			get
			{
				return this._EventDate;
			}
			set
			{
				if ((this._EventDate != value))
				{
					this.OnEventDateChanging(value);
					this.SendPropertyChanging();
					this._EventDate = value;
					this.SendPropertyChanged("EventDate");
					this.OnEventDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
